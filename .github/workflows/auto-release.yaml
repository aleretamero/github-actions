name: Auto Release on Merge

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # necess√°rio para pegar todas as tags

      - name: Set up Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}

      - name: Get latest version tag
        id: get_latest_tag
        run: |
          TAG=$(git tag --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n1)
          echo "latest_tag=${TAG:-v0.0.0}" >> $GITHUB_OUTPUT

      - name: Determine next version
        id: calc_version
        run: |
          echo "üîç √öltima vers√£o: ${{ steps.get_latest_tag.outputs.latest_tag }}"
          version=${{ steps.get_latest_tag.outputs.latest_tag }}
          version="${version#v}"  # remove o "v"
          IFS='.' read -r major minor patch <<< "$version"

          echo "üîÄ Branch de origem: ${{ github.event.head_commit.message }}"

          BRANCH_NAME=$(git log -1 --pretty=%B | head -n 1)
          BRANCH_NAME=$(echo "$BRANCH_NAME" | tr '[:upper:]' '[:lower:]')

          if [[ "$BRANCH_NAME" == feat/* || "$BRANCH_NAME" == feature/* ]]; then
            minor=$((minor + 1))
            patch=0
          elif [[ "$BRANCH_NAME" == fix/* || "$BRANCH_NAME" == hotfix/* || "$BRANCH_NAME" == bugfix/* ]]; then
            patch=$((patch + 1))
          else
            patch=$((patch + 1))
          fi

          new_version="v${major}.${minor}.${patch}"
          echo "next_tag=$new_version" >> $GITHUB_OUTPUT
          echo "üì¶ Pr√≥xima vers√£o: $new_version"

      - name: Create Git Tag
        run: |
          git tag ${{ steps.calc_version.outputs.next_tag }}
          git push origin ${{ steps.calc_version.outputs.next_tag }}

      - name: Create GitHub Release (pre-release)
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.calc_version.outputs.next_tag }}
          name: Release ${{ steps.calc_version.outputs.next_tag }}
          body: Auto release criado ap√≥s merge na main.
          prerelease: true
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
